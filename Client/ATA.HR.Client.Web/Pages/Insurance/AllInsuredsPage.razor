@page "/insurance/all-insureds"

@using DNTPersianUtils.Core
@using ATA.HR.Client.Web.APIs.HRInsuranceModels
@using ATA.HR.Client.Web.APIs.Insurance.Models
@using Blazor.PersianDatePicker.Extensions
@using Calendar = Blazor.PersianDatePicker.Calendar
@inherits BitPageBase

<PageTitle>
    @PageTitles.AllInsuredsPage.Title
</PageTitle>

<TelerikLoaderContainer Text="" Visible="@IsLoading" />

<div class="personnel-page">
    <!-- Page Heading Title -->
    <section class="page-header-section">
        <div class="page-header-wrapper">
            @if (PageOperationType == OperationType.Filter)
            {
                <TopBar PageName="@PageTitles.AllInsuredsPage.Title" PageDescription="لیست همه‌ی بیمه شدگان و وضعیت جاری آن‌ها در سیستم بیمه تکمیلی سامانه جامع منابع انسانی" />
            }
        </div>
    </section>

    <!-- Filter -->
    <section class="filter-section">
        @if (PageOperationType == OperationType.Filter)
        {
            <div class="page-box-wrapper">
                <div class="row insureds-filters">
                    <div class="col-12 col-md-6 col-xl-6 col-xxl-3">
                        <label class="input-label">
                            کاربر
                        </label>
                        <div class="searchbar-custom-wrapper">
                            <img src="@IconUrls.Search" />
                            <TelerikTextBox class="full-width"
                                            PlaceHolder="جستجو با شماره‌ی پرسنلی، نام بیمه شونده"
                                            ValueChanged="SearchTermChanged">
                            </TelerikTextBox>
                        </div>
                    </div>

                    @* <div class="col-12 col-md-6 col-xxl-3 filter-box">
                <label>واحد</label>
                <div>
                <RadzenDropDown AllowClear="true" TValue="string" AllowFiltering="true"
                Placeholder="انتخاب کنید" Data="@UnitsSource"
                @bind-Value="@PersonnelToManageDocumentFilterArgs.Unit" TextProperty="Text"
                Change="@(() => ApplyFilters)" ValueProperty="Value" />
                </div>
                </div>

                <div class="col-12 col-md-6 col-xxl-3 filter-box">
                <label>محل خدمت</label>
                <div>
                <RadzenDropDown AllowClear="true" TValue="string" AllowFiltering="true"
                Placeholder="انتخاب کنید" Data="@WorkLocationsSource"
                @bind-Value="@PersonnelToManageDocumentFilterArgs.WorkLocation" TextProperty="Text"
                Change="@(() => ApplyFilters)" ValueProperty="Value" />
                </div>
                </div> *@

                    <div class="col-12 col-md-6 col-xxl-3 filter-box">
                        <label>نوع بیمه شونده</label>
                        <div>
                            <RadzenDropDown AllowClear="true" TValue="string" AllowFiltering="true"
                                                Placeholder="انتخاب کنید" Data="@InsuredTypeSource"
                                                @bind-Value="@AllInsuredsFilterArgs.OnlyMainInsuredsOrDependentsSelectedValue" TextProperty="Text"
                                                Change="@(() => ApplyFilters)" ValueProperty="Value" />
                        </div>
                    </div>

                    <div class="col-12 col-md-6 col-xxl-3 filter-box">
                        <label>وضعیت بیمه تکمیلی</label>
                        <div>
                            <RadzenDropDown AllowClear="true" TValue="string" AllowFiltering="true"
                                            Placeholder="انتخاب کنید" Data="@InsuranceStatusSource"
                            @bind-Value="@AllInsuredsFilterArgs.InsuranceStatusSelectedValue" TextProperty="Text"
                                            Change="@(() => ApplyFilters)" ValueProperty="Value" />
                        </div>
                    </div>

                    <div class="col-12 col-md-6 col-xxl-3 filter-box">
                        <label>وضعیت بیمه عمر</label>
                        <div>
                            <RadzenDropDown AllowClear="true" TValue="string" AllowFiltering="true"
                                            Placeholder="انتخاب کنید" Data="@LifeInsuranceStatusSource"
                            @bind-Value="@AllInsuredsFilterArgs.LifeInsuranceStatusSelectedValue" TextProperty="Text"
                                            Change="@(() => ApplyFilters)" ValueProperty="Value" />
                        </div>
                    </div>

                    <div class="col-12 col-md-6 col-xxl-3 filter-box">
                        <label> از تاریخ قطع بیمه  </label>
                        <div>
                            <InputPersianDatePicker Id="clAt"
                            @bind-Value="AllInsuredsFilterArgs.FromEndedAtJalali"
                                                    Name="clRegisteredAt"
                                                    OnClear="() => ApplyFilters"
                                                    CssClass="cost-date-picker"
                                                    Visible="true"
                                                    ReadOnly="true"
                                                    Disabled="false"
                                                    PickerAlign="Align.Right"
                                                    InitialValue="false"
                                                    CalendarType="Calendar.SingleModeJalali"
                                                    DigitType="DigitType.BasedOnCalendar"
                                                    DateFormat="DateFormat.yyyy_slash_MM_slash_dd"
                                                    MinDateSetOnToday="false"
                                                    Placeholder="از تاریخ"
                                                    OnChange="() => ApplyFilters"
                                                    Theme="PickerTheme.RedBlack" />
                        </div>
                    </div>

                    <div class="col-12 col-md-6 col-xxl-3 filter-box">
                        <label>تا تاریخ قطع بیمه</label>
                        <div>
                            <InputPersianDatePicker Id="clAt2"
                                                    @bind-Value="AllInsuredsFilterArgs.ToEndedAtJalali"
                                                    OnClear="() => ApplyFilters"
                                                    Name="clRegisteredAt2"
                                                    CssClass="cost-date-picker"
                                                    Visible="true"
                                                    ReadOnly="true"
                                                    Disabled="false"
                                                    PickerAlign="Align.Right"
                                                    InitialValue="false"
                                                    CalendarType="Calendar.SingleModeJalali"
                                                    DigitType="DigitType.BasedOnCalendar"
                                                    DateFormat="DateFormat.yyyy_slash_MM_slash_dd"
                                                    MinDateSetOnToday="false"
                                                    Placeholder="تا تاریخ"
                                                    OnChange="() => ApplyFilters"
                                                    Theme="PickerTheme.RedBlack" />
                        </div>
                    </div>

                </div>
            </div>
        }
    </section>

    <!-- Grid -->
<section class="grid-section">
    <div class="page-grid-wrapper">

        <div class="page-grid-operation-wrapper align-items-center">

            @if (IsLoading is false)
            {
                <div class="contracts-count" style="padding-top: 5px;
                                                    font-family: 'bhoma';
                                                    padding-bottom: 7px;">
                    @($"{TotalInsuredsCount.ToString().ToPersianNumbers()} رکورد")
                </div>
            }
            else
            {
                <div class="contracts-count">
                    <div style="margin-top: -4px;">Loading</div>
                </div>
            }

            <TelerikButton Class="secondary-button excel-button contracts-excel-button" ImageUrl="@IconUrls.Export" OnClick="ExportInsuredsDataToExcel"> خروجی Excel </TelerikButton>

            @if (SendSmsToActiveInsureds)
            {
                <TelerikButton Class="info-button excel-button contracts-excel-button contracts-sms-button" ImageUrl="@IconUrls.Comment" OnClick="OpenSendSmsWindow">  ارسال پیامک</TelerikButton>
            }

        </div>

        @*<div class="orders-archive-status-container">
            <div class="@(OrdersDataFilter.DataArchivableState == (int)ArchivableState.Active ? "active" : "")"
            @onclick="() => FilterOrdersBasedOnArchivedState(ArchivableState.Active)">
            ثبت شده
            </div>
            <div class="@(OrdersDataFilter.DataArchivableState == (int)ArchivableState.Archived ? "active" : "")"
            @onclick="() => FilterOrdersBasedOnArchivedState(ArchivableState.Archived)">
            حذف شده
            </div>
            <div class="@(OrdersDataFilter.DataArchivableState == (int)ArchivableState.All ? "active" : "")"
            @onclick="() => FilterOrdersBasedOnArchivedState(ArchivableState.All)">
            همه
            </div>
            </div>*@

        <TelerikGrid TItem="@InsuredDto" @ref="@InsuredsGridRef" Height="100%" Pageable="true" PageSize="PageSize"
                     Sortable="true" Groupable="false" Resizable="true" Class="insured-table" Reorderable="true" OnStateInit="@OnStateInitHandler"
                     OnRowRender="OnGridRowRender" OnRead=@OnReadHandler>
            <GridColumns>
                @*<GridColumn Field="@(nameof(InsuredDto.UserId))" Title="" Width="120px" Locked="false"
                    Sortable="false">
                    <Template Context="gridContext">
                    @{
                    var user = (InsuredDto)gridContext;

                    <img class="user-profile-img" src="@user.PictureURLToDisplay" @onerror="() =>
                    OnUserImageLoadFailed(user)" />
                    }
                    </Template>
                    </GridColumn>*@
                <GridColumn Field="@(nameof(InsuredDto.UserPersonnelCode))" Title="کد پرسنلی" Width="100px"
                            Locked="false" Sortable="true">
                    <Template Context="gridContext">
                        @{
                            var insured = (InsuredDto)gridContext;

                            <span> @insured.UserPersonnelCode </span>
                        }
                    </Template>
                </GridColumn>
                <GridColumn Field="@(nameof(InsuredDto.UserDismissed))" Title="وضعیت استخدام" Width="100px"
                            Locked="false" Sortable="true">
                    <Template Context="gridContext">
                        @{
                            var insured = (InsuredDto)gridContext;

                            if (insured.IsMainInsurer)
                            {
                                @if (insured.UserDismissed is false)
                                {
                                    <img class="active-tik-status" src="@IconUrls.CheckIcon" />
                                }
                                else
                                {
                                    <img style="margin-right: 32%" src="@IconUrls.ErrorToast" />
                                }
                            }
                        }
                    </Template>
                </GridColumn>
                <GridColumn Field="@(nameof(InsuredDto.UserInsuranceCode))" Title="شماره بیمه" Width="100px"
                            Locked="false" Sortable="false">
                    <Template Context="gridContext">
                        @{
                            var insured = (InsuredDto)gridContext;

                            if (insured.IsMainInsurer)
                            {
                                <span> @insured.UserInsuranceCode </span>
                            }
                        }
                    </Template>
                </GridColumn>
                <GridColumn Field="@(nameof(InsuredDto.UserSaderatAccountNoDisplay))" Title="حساب صادرات"
                            Width="100px" Locked="false" Sortable="false">
                    <Template Context="gridContext">
                        @{
                            var insured = (InsuredDto)gridContext;

                            if (insured.IsMainInsurer)
                            {
                                <span> @insured.UserSaderatAccountNoDisplay </span>
                            }
                        }
                    </Template>
                </GridColumn>
                <GridColumn Field="@(nameof(InsuredDto.FullName))" Title="نام بیمه شونده" Width="100px"
                            Locked="false" Sortable="true" />
                <GridColumn Field="@(nameof(InsuredDto.RelationType))" Title="نسبت" Width="100px" Locked="false"
                            Sortable="false" />
                <GridColumn Field="@(nameof(InsuredDto.NationalCode))" Title="کد ملی" Width="100px" Locked="false"
                            Sortable="false" />
                <GridColumn Field="@(nameof(InsuredDto.BirthDateJalali))" Title="تاریخ تولد" Width="100px"
                            Locked="false" Sortable="false" />
                <GridColumn Field="@(nameof(InsuredDto.StartedAtJalali))" Title="تاریخ شروع ب." Width="100px"
                            Locked="false" Sortable="false" />
                <GridColumn Field="@(nameof(InsuredDto.ExpiredAtJalali))" Title="تاریخ پایان ب." Width="100px"
                            Locked="false" Sortable="false" />
                <GridColumn Field="@(nameof(InsuredDto.CreatedAtJalali))" Title="تاریخ عضویت" Width="100px"
                            Locked="false" Sortable="false" />
                <GridColumn Field="@(nameof(InsuredDto.InsuranceStatusDisplay))" Title="وضعیت ب. تکمیلی"
                            Width="135px" Locked="false" Sortable="false">
                    <Template Context="gridContext">
                        @{
                            var insured = (InsuredDto)gridContext;

                            <div class="flex">
                                <div>@insured.InsuranceStatusDisplay</div>

                                <AuthorizeView Policy="@Claims.Insurance_TerminateInsured">
                                        <div class="grid-action-buttons-wrapper terminate-insured-button-wrapper" style="margin-left: 0;justify-content: center;    align-items: center;margin-right: 5px;">
                                    @if (insured.IsActive)
                                    {
                                        <button style="height: 25px !important" class="btn btn-sm btn-primary" @onclick="@(() => ShowTerminateInsuredConfirmDialog(insured.Id, insured.FullName))">
                                            <span>لغو</span>
                                        </button>
                                        @*<button class="grid-action-button delete" title="لغو عضویت" @onclick="@(() => ShowTerminateInsuredConfirmDialog(insured.Id, insured.FullName))">
                                            <img class="btn-img" src="@IconUrls.CloseCircle" />
                                            <img class="btn-img-hovered" src="@IconUrls.CloseCircle" />
                                        </button>*@
                                    }
                                    else
                                    {
                                        <button style="margin-right: -10px; height: 25px !important" class="btn btn-sm btn-primary" @onclick="@(() => ShowReviveInsuredConfirmDialog(insured.Id, insured.FullName))">
                                            <span>برگشت</span>
                                        </button>

                                        @*<button class="grid-action-button delete" title="برگشت عضویت" @onclick="@(() => ShowReviveInsuredConfirmDialog(insured.Id, insured.FullName))">
                                            <img class="btn-img" src="@IconUrls.CloseCircle" />
                                            <img class="btn-img-hovered" src="@IconUrls.CloseCircle" />
                                        </button>*@
                                    }
                                    </div>
                                </AuthorizeView>
                            </div>
                        }
                    </Template>            
                </GridColumn>
                <GridColumn Field="@(nameof(InsuredDto.EndedAtJalali))" Title="تاریخ قطع بیمه" Width="100px"
                            Locked="false" Sortable="false" />
                <GridColumn Field="@(nameof(InsuredDto.InsuranceStatusDisplay))" Title="وضعیت ب. عمر"
                            Width="120px" Locked="false" Sortable="false
">
                    <Template Context="gridContext">
                        @{
                            var insured = (InsuredDto)gridContext;

                            @if (insured.IsMainInsurer)
                            {
                                @if (insured.UserDismissed is false)
                                {
                                    <img class="active-tik-status" style="margin-top: 11px" src="@IconUrls.CheckIcon" />
                                }
                                else
                                {
                                    <img style="margin-right: 28%" src="@IconUrls.ErrorToast" />
                                }
                            }
                            else
                            {
                                <img style="margin-right: 28%" src="@IconUrls.ErrorToast" />
                            }
                        }
                    </Template>
                </GridColumn>
            </GridColumns>
        </TelerikGrid>
    </div>
</section>

<!-- Popup Windows => Confirm Insured Terminate -->
<section>
    <ConfirmDialog @bind-IsVisible="IsVisibleTerminateInsuredConfirmDialog"
                   Title="@($"تایید لغو عضویت بیمه تکمیلی {TerminatingInsuredFullName}")"
                   OkButtonText="لغو عضویت"
                   Text="عضویت این پرسنل از بیمه تکمیلی لغو خواهد شد. آیا از انجام لغو عضویت مطمئنید؟"
                   OnConfirm="() => TerminateInsured(TerminatingInsuredId)" />
</section>

<!-- Popup Windows => Confirm Insured Revive -->
<section>
    <ConfirmDialog @bind-IsVisible="IsVisibleReviveInsuredConfirmDialog"
                   Title="@($"تایید برگشت عضویت {RevivingInsuredFullName}")"
                   OkButtonText="برگشت عضویت"
                   Text="برای برگشت عضویت عائله تحت تکفل، ابتدا می‌بایست تغییرات در سیستم راهکاران انجام شود. آیا از انجام این عملیات مطمئنید؟"
                   OnConfirm="() => ReviveInsured(RevivingInsuredId)" />
</section>
</div>