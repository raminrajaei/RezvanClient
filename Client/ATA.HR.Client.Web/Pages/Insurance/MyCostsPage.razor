@page "/insurance/my-costs"
@page "/insurance/my-costs/{FromAddNewCostPage:int}"

@using ATA.HR.Client.Web.APIs.Insurance.Models.Responses
@using ATA.HR.Shared.Enums.Document
@using ATABit.Helper.Utils
@using DNTPersianUtils.Core
@using ATABit.Helper.Utils;
@using GridSelectionMode = ATA.HR.Client.Web.Enums.GridSelectionMode
@using Microsoft.AspNetCore.Components
@using Calendar = Blazor.PersianDatePicker.Calendar
@using ATA.HR.Client.Web.APIs.Enums
@inherits BitPageBase


<PageTitle>
    @if (IsNavigatedFromAddNewCostPage)
    {
        @PageTitles.AddNewCostPage.Title
    }
    else
    {
        @PageTitles.MyCostsPage.Title
    }
</PageTitle>

<TelerikLoaderContainer Text="" Visible="@IsLoading" />
<TelerikLoaderContainer Text="Uploading The Document" Visible="@IsUploading" LoaderType="LoaderType.ConvergingSpinner" />

<article>

    <div class="personnel-page">

        <!-- AddOrEdit Header -->
        <section>
            @if (PageOperationType is OperationType.Add or OperationType.Edit or OperationType.Custom1)
            {
                <HeaderAddOrEdit>
                    @if (IsNavigatedFromAddNewCostPage is false)
                    {
                        <button class="default-button" @onclick="ChangeToFilterMode">انصراف</button>
                    }
                    <button type="submit" form="costForm" class="primary-button">ذخیره</button>
                </HeaderAddOrEdit>
            }
        </section>

        <!-- Page Heading Title -->
        <section class="page-header-section">
            <div class="page-header-wrapper">
                <div class="flex align-items-center">
                    @if (IsNavigatedFromAddNewCostPage)
                    {
                        <TopBar PageName="@($"افزودن هزینه‌ی جدید")" PageDescription="ثبت کردن هزینه / صورت حساب / فاکتور جدید" />
                    }
                    else if (PageOperationType == OperationType.Edit)
                    {
                        <TopBar PageName="@($"ویرایش هزینه")" PageDescription="ویرایش هزینه‌ای که از قبل ثبت کرده‌اید" />
                    }
                    else
                    {
                        <TopBar PageName="@($"همه‌ی هزینه‌های ثبت شده‌ی من")" PageDescription="مشاهده‌ی همه‌ی هزینه‌هایی که ثبت کرده‌اید" />
                    }
                </div>

                @if (PageOperationType == OperationType.Filter)
                {
                    <div class="flex">
                        @*<button class="default-button" style="margin-left: 20px" @onclick="BackButtonHandler">بازگشت</button>*@
                        @if (IsNavigatedFromAddNewCostPage)
                        {
                            <RadzenButton class="primary-button" Text="افزودن هزینه" Click="ChangeToAddMode" />
                        }
                    </div>
                }
            </div>
        </section>

        <!-- Cost EditForm -->
        <section class="documentEditFormSection">
            @if ((IsNavigatedFromAddNewCostPage && SavingFirstCost) ||
            PageOperationType is OperationType.Add or OperationType.Edit)
            {
                <div class="form-custom-wrapper">

                    <EditForm id="costForm" class="row" Model="@SetCostCommand" OnValidSubmit="OnCostSubmit">

                        <DataAnnotationsValidator />

                        <!-- Form Section: Insured -->
                        <div class="row form-section">
                            <div class="col-2 form-section-title">بیمه شده</div>
                            <div class="col-10">
                                <div class="row">

                                    <div class="col-3 form-item-wrapper">
                                        <label for="documentCategory">ثبت هزینه برای * </label>
                                        <div class="form-input-wrapper">
                                            <RadzenDropDown id="documentCategory"
                                                            AllowClear="true"
                                                            TValue="int?"
                                                            AllowFiltering="true"
                                                            Placeholder="انتخاب بیمه شده"
                                                            Data="@(MyActiveInsuredsSource)"
                                            @bind-Value="@SetCostCommand.InsuredId"
                                                            TextProperty="Text"
                                                            ValueProperty="ValueInt" />
                                        </div>
                                        <ValidationMessage For="() => SetCostCommand.InsuredId" />
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Form Section: Cost Spec -->
                        <div class="row form-section">
                            <div class="col-2 form-section-title">مشخصات هزینه</div>
                            <div class="col-10">
                                <div class="row">
                                    <div class="col-3 form-item-wrapper">
                                        <label for="documentDesc"> موضوع هزینه * </label>
                                        <div class="form-input-wrapper">
                                            <RadzenTextBox id="documentDesc"
                                                           Style="width: 100%"
                                            @bind-Value="SetCostCommand.Title"
                                                           Placeholder="توضیح کلی مثل دارو، ویزیت و ..." />
                                        </div>
                                        <ValidationMessage For="() => SetCostCommand.Title" />
                                    </div>

                                    <div class="col-3 form-item-wrapper">
                                        <label for="documentDesc2">  عنوان هزینه مرتبط * </label>
                                        <div class="form-input-wrapper" @onclick=@(() => IsVisibleSelectObligationWindow = true)>
                                            <RadzenDropDown id="documentDesc2"
                                                            AllowClear="true"
                                                            TValue="int?"
                                                            AllowFiltering="true"
                                                            Placeholder="انتخاب تعرفه"
                                                            Data="@(ActivePolicyObligationsSource)"
                                            @bind-Value="@SetCostCommand.PolicyObligationId"
                                                            TextProperty="Text"
                                                            ValueProperty="ValueInt" />
                                        </div>
                                        <ValidationMessage For="() => SetCostCommand.PolicyObligationId" />
                                    </div>

                                    <div class="col-3 form-item-wrapper">
                                        <label for="documentDesc3"> تاریخ هزینه * </label>
                                        <div class="form-input-wrapper">
                                            <InputPersianDatePicker Id="clAt"
                                            @bind-Value="SetCostCommand.CostDateJalali"
                                                                    Name="clRegisteredAt"
                                                                    CssClass="cost-date-picker"
                                                                    Visible="true"
                                                                    Style="margin-left: -20px"
                                                                    ReadOnly="true"
                                                                    Disabled="false"
                                                                    PickerAlign="Align.Right"
                                                                    InitialValue="false"
                                                                    CalendarType="Calendar.SingleModeJalali"
                                                                    DigitType="DigitType.BasedOnCalendar"
                                                                    DateFormat="DateFormat.yyyy_slash_MM_slash_dd"
                                                                    MinDateSetOnToday="false"
                                                                    Placeholder="تاریخ هزینه"
                                                                    Theme="PickerTheme.RedBlack" />
                                        </div>
                                        <ValidationMessage For="() => SetCostCommand.CostDateJalali" />
                                    </div>

                                    <div class="col-3 form-item-wrapper">
                                        <label for="documentDesc4">
                                            مبلغ هزینه
                                            <span style="font-size: 12px; font-weight: bold; margin-right: 4px; margin-left: 7px; margin-top: 1px; letter-spacing: 0.5px; text-shadow: 0 0 black;">[ریال] </span>
                                            *
                                        </label>
                                        <div class="form-input-wrapper insurance-cost-amount">
                                            <RadzenNumeric id="documentDesc4"
                                                           Style="width: 100%"
                                                           Format="N0"
                                            @bind-Value="SetCostCommand.PaidAmount"
                                                           Placeholder="" />
                                        </div>
                                        <ValidationMessage For="() => SetCostCommand.PaidAmount" />
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-12">
                                        <p class="cost-form-note">
                                            <strong>توجه: </strong>
                                            در هر مرحله از ثبت هزینه صرفا یک صورتحساب بارگذاری گردد و
                                            از ثبت تجمیعی هزینه‌ها جدا خودداری گردد. در صورت
                                            عدم رعایت این مورد، هزینه‌های مربوطه قابل پرداخت نمی‌باشد.
                                        </p>
                                    </div>
                                </div>
                            </div>
                        </div>


                        <!-- Form Section: Attachments -->
                        <div class="row form-section">
                            <div class="col-2 form-section-title">پیوست</div>
                            <div class="col-10">

                                <div class="row">
                                    <div class="col-3 form-item-wrapper">
                                        <div class="flex justify-content-between">
                                            <label for="documentDesc13"> پیوست 1 * </label>

                                        </div>
                                        <div class="form-input-wrapper">
                                            <RadzenTextBox id="documentDesc13"
                                                           Style="width: 100%"
                                                           Disabled="@CostAttachment1.Url.IsNotNullOrEmpty()"
                                            @bind-Value="CostAttachment1.Title"
                                                           Placeholder="عنوان" />
                                        </div>
                                        <ValidationMessage For="() => CostAttachment1.Title" />
                                    </div>

                                    <div class="col-3 form-item-wrapper">

                                        <div class="flex justify-content-between">
                                            <label>
                                                @if (CostAttachment1.Url.IsNotNullOrEmpty())
                                                {
                                                    <span>&nbsp;</span>
                                                }
                                                else
                                                {
                                                    <span>بارگزاری پیوست 1 *</span>
                                                }
                                            </label>
                                            @if (CostAttachment1.Url.IsNotNullOrEmpty())
                                            {
                                                <span @onclick="RemoveAttachment1" class="remove-attachment-button">
                                                    حذف پیوست
                                                </span>
                                            }
                                        </div>
                                        <div class="form-input-wrapper">

                                            @if (CostAttachment1.Url.IsNotNullOrEmpty())
                                            {
                                                <div class="attachment-view-box">
                                                    <a href="@ToDocFullURL(CostAttachment1.Url)" target="_blank">
                                                        مشاهده پیوست 1
                                                    </a>
                                                </div>
                                            }
                                            else
                                            {
                                                <TelerikUpload SaveUrl="@SaveUrl"
                                                               SaveField="file"
                                                               Enabled="@string.IsNullOrWhiteSpace(CostAttachment1.Url)"
                                                               OnUpload="OnUploadHandler"
                                                               MaxFileSize="@(AppConstants.UploadLimits.DocMaxSizeAllowedToUploadInKiloBytes * 1024)"
                                                               MinFileSize="1024"
                                                               OnSelect="e => OnFileSelectToUpload(e, 1)"
                                                               OnSuccess="e => OnFileSuccessUpload(e, 1)">
                                                </TelerikUpload>
                                                <div class="form-input-helper"> حداکثر حجم 10 مگ </div>
                                            }
                                        </div>
                                        <ValidationMessage For="() => CostAttachment1.Url" />
                                    </div>

                                    <div class="col-3 form-item-wrapper">
                                        <div class="flex justify-content-between">
                                            <label for="documentDesc13"> پیوست 2  </label>

                                        </div>
                                        <div class="form-input-wrapper">
                                            <RadzenTextBox id="documentDesc132"
                                                           Style="width: 100%"
                                                           Disabled="@CostAttachment2.Url.IsNotNullOrEmpty()"
                                            @bind-Value="CostAttachment2.Title"
                                                           Placeholder="عنوان" />
                                        </div>
                                        <ValidationMessage For="() => CostAttachment2.Title" />
                                    </div>

                                    <div class="col-3 form-item-wrapper">
                                        <div class="flex justify-content-between">
                                            <label>
                                                @if (CostAttachment2.Url.IsNotNullOrEmpty())
                                                {
                                                    <span>&nbsp;</span>
                                                }
                                                else
                                                {
                                                    <span>بارگزاری پیوست 2</span>
                                                }
                                            </label>
                                            @if (CostAttachment2.Url.IsNotNullOrEmpty())
                                            {
                                                <span @onclick="RemoveAttachment2" class="remove-attachment-button">
                                                    حذف پیوست
                                                </span>
                                            }
                                        </div>

                                        <div class="form-input-wrapper">
                                            @if (CostAttachment2.Url.IsNotNullOrEmpty())
                                            {
                                                <div class="attachment-view-box">
                                                    <a href="@ToDocFullURL(CostAttachment2.Url)" target="_blank">
                                                        مشاهده پیوست 2
                                                    </a>
                                                </div>
                                            }
                                            else
                                            {
                                                <TelerikUpload SaveUrl="@SaveUrl"
                                                               SaveField="file"
                                                               Enabled="@string.IsNullOrWhiteSpace(CostAttachment2.Url)"
                                                               OnUpload="OnUploadHandler"
                                                               MaxFileSize="@(AppConstants.UploadLimits.DocMaxSizeAllowedToUploadInKiloBytes * 1024)"
                                                               MinFileSize="1024"
                                                               OnSelect="e => OnFileSelectToUpload(e, 2)"
                                                               OnSuccess="e => OnFileSuccessUpload(e, 2)">
                                                </TelerikUpload>
                                                <div class="form-input-helper"> حداکثر حجم 10 مگ </div>
                                            }

                                        </div>
                                        <ValidationMessage For="() => CostAttachment2.Url" />
                                    </div>

                                </div>

                                @*<div class="row">
                            <div class="col-4 form-item-wrapper">
                            <label for="documentDesc13"> عنوان پیوست 3 </label>
                            <div class="form-input-wrapper">
                            <RadzenTextBox id="documentDesc132"
                            Style="width: 100%"
                            @bind-Value="CostAttachment3.Title"
                            Placeholder="عنوان پیوست 3" />
                            </div>
                            <ValidationMessage For="() => CostAttachment3.Title" />
                            </div>

                            <div class="col-5 form-item-wrapper">
                            <label> بارگزاری پیوست 3 </label>
                            <div class="form-input-wrapper">
                            <TelerikUpload SaveUrl="@SaveUrl"
                            SaveField="file"
                            OnUpload="OnUploadHandler"
                            MaxFileSize="@(AppConstants.UploadLimits.DocMaxSizeAllowedToUploadInKiloBytes * 1024)"
                            MinFileSize="1024"
                            OnSelect="e => OnFileSelectToUpload(e, 3)"
                            OnSuccess="e => OnFileSuccessUpload(e, 3)">
                            </TelerikUpload>
                            <div class="form-input-helper"> حداکثر حجم 10 مگ </div>
                            </div>
                            <ValidationMessage For="() => CostAttachment3.Url" />
                            </div>

                            </div>*@
                                <div class="row">
                                    <div class="col-12">
                                        <div class="cost-form-note">
                                            <p>
                                                <strong>نکته ۱: </strong>
                                                وارد کردن حداقل یک پیوست الزامی است.
                                            </p>
                                            <p>
                                                <strong>نکته ۲: </strong>
                                                پس از بارگزاری اطلاعات هزینه‌ای، نسبت به ارسال اصل مدارک
                                                حداکثر ظرف یک هفته اقدام گردد.
                                            </p>
                                            <p>
                                                <strong>نکته ۳: </strong>
                                                اسناد هزینه‌های مرتبط با دندانپزشکی و بیمارستانی الزاما می‌بایست
                                                همراه با پوز بانکی، رسید کارت به کارت و یا رسید تحویل چک به
                                                مرکز ارائه کننده خدمات باشد؛ در غیر اینصورت هزینه
                                                مذکور مورد پذیرش صندوق بیمه تکمیلی کوثر نخواهد بود. در ضمن
                                                در ثبت هزینه دندانپزشکی ارائه عکس
                                                OPG
                                                الزامی می‌باشد.
                                            </p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Form Section: Description -->
                        <div class="row form-section">
                            <div class="col-2 form-section-title">توضیحات</div>
                            <div class="col-10">
                                <div class="row">
                                    <div class="col-6 form-item-wrapper">
                                        <label for="documentDesc13"> توضیحات </label>
                                        <div class="form-input-wrapper" style="margin-left:22px">
                                            <RadzenTextArea id="documentDesc"
                                                            Style="width: 100%;
                                                                   height: 50px;"
                                            @bind-Value="SetCostCommand.Description"
                                                            Placeholder="حداکثر 300 کارکتر" />
                                        </div>
                                        <ValidationMessage For="() => SetCostCommand.Description" />
                                    </div>


                                </div>
                            </div>
                        </div>

                    </EditForm>

                </div>
            }
        </section>

        <!-- Filter -->
        <section class="filter-section">
            @if (IsNavigatedFromAddNewCostPage is false && PageOperationType == OperationType.Filter)
            {
                <div class="page-box-wrapper">
                    <div class="row">
                        <div class="col-12 col-md-6 col-xl-6 col-xxl-3">
                            <label class="input-label">
                                بیمه شده
                            </label>
                            <div class="searchbar-custom-wrapper">
                                <img src="@IconUrls.Search" />
                                <TelerikTextBox class="full-width"
                                                PlaceHolder="جستجو با نام بیمه شده یا شماره‌ی پرسنلی اصلی"
                                                ValueChanged="SearchTermChanged">
                                </TelerikTextBox>
                            </div>
                        </div>

                        <div class="col-12 col-md-6 col-xxl-3 filter-box">
                            <label>نوع عنوان مرتبط</label>
                            <div>
                                <RadzenDropDown AllowClear="true"
                                                TValue="int?"
                                                AllowFiltering="true"
                                                Placeholder="انتخاب کنید"
                                                Data="ActivePolicyObligationsSource"
                                @bind-Value="@CostsQuery.PolicyObligationId"
                                                Change="() => ApplyFilters()"
                                                TextProperty="Text"
                                                ValueProperty="ValueInt" />
                            </div>
                        </div>

                        <div class="col-12 col-md-6 col-xxl-3 filter-box">
                            <label>از تاریخ هزینه</label>
                            <div>
                                <InputPersianDatePicker Id="clAt"
                                @bind-Value="CostsQuery.FromCostJalaliDate"
                                                        Name="clRegisteredAt"
                                                        CssClass="cost-date-picker"
                                                        Visible="true"
                                                        ReadOnly="true"
                                                        Disabled="false"
                                                        PickerAlign="Align.Right"
                                                        InitialValue="false"
                                                        CalendarType="Calendar.SingleModeJalali"
                                                        DigitType="DigitType.BasedOnCalendar"
                                                        DateFormat="DateFormat.yyyy_slash_MM_slash_dd"
                                                        MinDateSetOnToday="false"
                                                        Placeholder="از تاریخ"
                                                        OnClear="() => ApplyFilters()"
                                                        OnChange="() => ApplyFilters()"
                                                        Theme="PickerTheme.RedBlack" />
                            </div>
                        </div>

                        <div class="col-12 col-md-6 col-xxl-3 filter-box">
                            <label>تا تاریخ هزینه</label>
                            <div>
                                <InputPersianDatePicker Id="clAt2"
                                @bind-Value="CostsQuery.ToCostJalaliDate"
                                                        Name="clRegisteredAt2"
                                                        CssClass="cost-date-picker"
                                                        Visible="true"
                                                        ReadOnly="true"
                                                        Disabled="false"
                                                        PickerAlign="Align.Right"
                                                        InitialValue="false"
                                                        CalendarType="Calendar.SingleModeJalali"
                                                        DigitType="DigitType.BasedOnCalendar"
                                                        DateFormat="DateFormat.yyyy_slash_MM_slash_dd"
                                                        MinDateSetOnToday="false"
                                                        Placeholder="تا تاریخ"
                                                        OnClear="() => ApplyFilters()"
                                                        OnChange="() => ApplyFilters()"
                                                        Theme="PickerTheme.RedBlack" />
                            </div>
                        </div>
                    </div>
                </div>
            }
        </section>

        <!-- Grid -->
        <section class="grid-section">
            <div class="page-grid-wrapper mt-4">

                @if (IsNavigatedFromAddNewCostPage is false)
                {
                    <div class="page-grid-operation-wrapper align-items-center" style="flex-direction: row;
                                                                                       justify-content: space-between;">

                        <section style="display: flex;
                                        margin-top: -20px;">
                            @{
                                @if (IsVisibleMultipleActionButton)
                                {
                                    <div class="multiple-action-box" style="margin-right: 20px">
                                        <label class="select-status-label">حالت انتخابی پرینت</label>
                                        <div>
                                            <RadzenDropDown AllowClear="false"
                                                            TValue="string"
                                                            Style="width: 150px"
                                                            AllowFiltering="false"
                                                            Data="@(EnumMapping.ToSelectListItems<GridSelectionMode>())"
                                            @bind-Value="@MultiActionModeSelectedValue"
                                                            TextProperty="Text"
                                                            ValueProperty="Value" />
                                        </div>
                                    </div>
                                }

                                var additionalClass = IsVisibleMultipleActionButton ? "" : "visibility-hidden";
                                @if (IsMultiActionOnCustomSelection)
                                {
                                    <TelerikButton Class="primary-button send-all-contracts-button costs-print-button"
                                                   OnClick="PrintFilteredCosts">
                                        @if (SelectedItems.Count() != 0)
                                        {
                                            <span>
                                                @($"پرینت {SelectedItems.Count().ToPersianNumbers()} هزینه‌ انتخاب شده‌")
                                            </span>
                                        }
                                        else
                                        {
                                            <span>
                                                انتخاب کنید
                                            </span>
                                        }

                                    </TelerikButton>
                                }
                                else
                                {
                                    <TelerikButton Class="primary-button send-all-contracts-button costs-print-button"
                                                   OnClick="PrintFilteredCosts">
                                        @($"پرینت {TotalCostsCounts.ToPersianNumbers()} هزینه فیلتر شده‌")
                                    </TelerikButton>
                                }

                            }
                        </section>

                        <div class="flex justify-content-end align-items-center" style="margin-top: -20px">



                            <div style="color: #0c5460; background-color: #d1ecf1; border-color: #bee5eb; position: relative; padding: 4px 14px 6px 14px; margin-bottom: 2px; margin-top: 0; border: 1px solid transparent; border-radius: .25rem; margin-left: 10px; font-family: 'bhoma'; letter-spacing: -0.5px; font-size: 15px;">
                                مجموع هزینه‌های ثبت شده:
                                <strong>
                                    @TotalCostsAmount
                                    <span style="font-size: 11px; letter-spacing: 0.5px;font-family: 'bhoma';">
                                        ریال
                                    </span>
                                </strong>
                            </div>

                            <TelerikButton Class="secondary-button excel-button contracts-excel-button" ImageUrl="@IconUrls.Export" OnClick="ExportCostsDataToExcel"> خروجی Excel </TelerikButton>



                        </div>
                    </div>
                }

                @*<div class="orders-archive-status-container">
                <div class="@(OrdersDataFilter.DataArchivableState == (int)ArchivableState.Active ? "active" : "")"
                @onclick="() => FilterOrdersBasedOnArchivedState(ArchivableState.Active)">
                ثبت شده
                </div>
                <div class="@(OrdersDataFilter.DataArchivableState == (int)ArchivableState.Archived ? "active" : "")"
                @onclick="() => FilterOrdersBasedOnArchivedState(ArchivableState.Archived)">
                حذف شده
                </div>
                <div class="@(OrdersDataFilter.DataArchivableState == (int)ArchivableState.All ? "active" : "")"
                @onclick="() => FilterOrdersBasedOnArchivedState(ArchivableState.All)">
                همه
                </div>
                </div>*@


                <TelerikGrid TItem="@CostDto"
                @ref="@CostsGridRef"
                             Height="100%"
                             Pageable="true"
                             PageSize="PageSize"
                             Sortable="true"
                             Groupable="false"
                             SelectionMode="Telerik.Blazor.GridSelectionMode.Multiple"
                @bind-SelectedItems="SelectedItems"
                             Resizable="true"
                             Reorderable="true"
                             OnStateInit="@OnStateInitHandler"
                             OnRowRender="OnGridRowRender"
                             OnRead=@OnReadHandler>
                    <GridColumns>
                        <GridCheckboxColumn Visible="@(IsVisibleMultipleActionButton && IsMultiActionOnCustomSelection)" CheckBoxOnlySelection="true" SelectAllMode="GridSelectAllMode.Current"></GridCheckboxColumn>
                        <GridColumn Field="@(nameof(CostDto.InsuredFullName))" Title="نام بیمار" Width="100px" Locked="false" Sortable="false" />
                        <GridColumn Field="@(nameof(CostDto.Title))" Title="موضوع هزینه" Width="100px" Locked="false" Sortable="false" />
                        <GridColumn Field="@(nameof(CostDto.CreatedAtJalali))" Title="تاریخ ثبت" Width="90px" Locked="false" Sortable="false" />
                        <GridColumn Field="@(nameof(CostDto.PolicyObligationObligationCode))" Title="کد عنوان" Width="70px" Locked="false" Sortable="false" />
                        <GridColumn Field="@(nameof(CostDto.PolicyObligationObligationTitle))" Title="عنوان هزینه" Width="120px" Locked="false" Sortable="true" />
                        <GridColumn Field="@(nameof(CostDto.CostDateJalali))" Title="تاریخ هزینه" Width="80px" Locked="false" Sortable="false" />
                        <GridColumn Field="@(nameof(CostDto.PaidAmount))" Title="مبلغ هزینه" Width="100px" Locked="false" Sortable="false">
                            <Template Context="gridContext">
                                @{
                                    var cost = (CostDto)gridContext;

                                    <span> @cost.PaidAmount.ToCurrencyStringFormat().ToPersianNumbers()</span>
                                    <span style="font-size: 11px;">ریال</span>
                                }
                            </Template>
                        </GridColumn>
                        <GridColumn Field="@(nameof(CostDto.ConfirmedAmount))" Title="مبلغ تایید شده" Width="100px" Locked="false" Sortable="false">
                            <Template Context="gridContext">
                                @{
                                    var cost = (CostDto)gridContext;

                                    @if (cost.ConfirmedAmount.HasValue)
                                    {
                                        <span> @cost.ConfirmedAmount.Value.ToCurrencyStringFormat().ToPersianNumbers()</span>
                                        <span style="font-size: 11px;">ریال</span>
                                    }
                                    else
                                    {
                                        <span>
                                            <em style="color: darkgray; letter-spacing: 0.5px;">در حال بررسی</em>
                                        </span>
                                    }
                                }
                            </Template>
                        </GridColumn>
                        <GridColumn Field="@(nameof(CostDto.FranchisePercent))" Title="فرانشیز" Width="100px" Locked="false" Sortable="false">
                            <Template Context="gridContext">
                                @{
                                    var cost = (CostDto)gridContext;

                                    @if (cost.FranchisePercent.HasValue)
                                    {
                                        <div> @($"{cost.FranchisePercent.Value.ToPersianNumbers()}%")</div>
                                    }
                                    else
                                    {
                                        <span>
                                            <em style="color: darkgray;
                                                               letter-spacing: 0.5px;">در حال بررسی</em>
                                        </span>
                                    }
                                }
                            </Template>
                        </GridColumn>
                        <GridColumn Field="@(nameof(CostDto.FinalPayableAmount))" Title="قابل پرداخت" Width="100px" Locked="false" Sortable="false">
                            <Template Context="gridContext">
                                @{
                                    var cost = (CostDto)gridContext;

                                    @if (cost.FinalPayableAmount.HasValue)
                                    {
                                        <div> @cost.FinalPayableAmount.Value.ToCurrencyStringFormat().ToPersianNumbers() ریال</div>
                                    }
                                    else
                                    {
                                        <span>
                                            <em style="color: darkgray;
                                                                   letter-spacing: 0.5px;">در حال بررسی</em>
                                        </span>
                                    }
                                }
                            </Template>
                        </GridColumn>
                        <GridColumn Field="@(nameof(CostDto.Description))" Title="توضیحات" Width="100px" Locked="false" Sortable="false">
                            <Template Context="gridContext">
                                @{
                                    var cost = (CostDto)gridContext;

                                    @if (string.IsNullOrWhiteSpace(cost.Description))
                                    {
                                        <span></span>                                    
                                    }
                                    else if (cost.Description.Length < 40)
                                    {
                                        <div> @cost.Description</div>
                                    }
                                    else
                                    {
                                        <div> @cost.Description.Substring(0, 40) ...</div>
                                    }
                                }
                            </Template>
                        </GridColumn>
                        <GridColumn Field="@(nameof(CostDto.Id))" Title="پیوست" Width="150px" Locked="false" Sortable="true">
                            <Template Context="gridContext">
                                @{
                                    var cost = (CostDto)gridContext;

                                    foreach (var attachment in cost.CostAttachments)
                                    {
                                        <div class="chip-badge">
                                            <a target="_blank" href="@ToDocFullURL(attachment.Url)"> @attachment.Title </a>
                                        </div>
                                    }
                                }
                            </Template>
                        </GridColumn>
                        <GridColumn Field="@(nameof(CostDto.Id))" Title="عملیات" Width="130px" Locked="true" Sortable="false">
                            <Template Context="gridContext">
                                @{
                                    var cost = (CostDto)gridContext;

                                    @if (IsNavigatedFromAddNewCostPage is false)
                                    {
                                        <div class="grid-action-buttons-wrapper justify-content-center">

                                            @if (cost.FlowCurrentStateTag == InsuranceStateTag.CostEdit.ToString()
                                                 || (cost.FlowCurrentStateTag.IsNotNullOrEmpty() && cost.FlowCurrentStateTag!.StartsWith("HRCheck")))
                                            {
                                                <button class="grid-action-button edit" style="margin-right: 0" title="ویرایش" @onclick="@(() => ChangeToEditMode(cost.Id))">
                                                    <img class="btn-img" src="@IconUrls.PenOrange"/>
                                                    <img class="btn-img-hovered" src="@IconUrls.PenWhite"/>
                                                </button>
                                            }
                                            
                                            @if (cost.FlowCurrentStateTag.IsNotNullOrEmpty() && cost.FlowCurrentStateTag!.StartsWith("HRCheck"))
                                            {
                                                <button style="margin-right: 3px;" class="grid-action-button delete" title="حذف" @onclick="@(() => ShowDeleteCostConfirmDialog(cost.Id))">
                                                    <img class="btn-img" src="@IconUrls.TrashRed" />
                                                    <img class="btn-img-hovered" src="@IconUrls.TrashWhite" />
                                                </button>
                                            }
                                            
                                            <button style="margin-left: 3px;margin-right: 3px;" class="grid-action-button view"
                                                    title="مشاهده" @onclick="@(() => OpenCostFlowFormsPage(cost.Id))">
                                                <img class="btn-img" src="@IconUrls.EyeGreen" />
                                                <img class="btn-img-hovered" src="@IconUrls.EyeWhite" />
                                            </button>

                                            @*<TelerikButton Class="default-button view-work-button view-cost-button"
                                                           Enabled="!IsLoading"
                                                           OnClick="@(() => OpenCostFlowFormsPage(cost.Id))">
                                                مشاهده
                                            </TelerikButton>*@
                                        </div>
                                    }
                                }
                            </Template>
                        </GridColumn>
                        @*<AuthorizeView Policy="@Claims.Docs_DeletePermission">
                        <GridColumn Field="@(nameof(PersonnelDocumentReadDto.Id))" Title="حذف" Width="100px" Locked="true" Sortable="false">
                        <Template Context="gridContext">
                        @{
                        var document = (PersonnelDocumentReadDto)gridContext;

                        <div class="grid-action-buttons-wrapper">
                        <button class="grid-action-button delete" title="Delete" @onclick="@(() => ShowDeleteDocumentConfirmDialog(document.Id))">
                        <img class="btn-img" src="@IconUrls.TrashGray" />
                        <img class="btn-img-hovered" src="@IconUrls.TrashWhite" />
                        </button>
                        </div>
                        }
                        </Template>
                        </GridColumn>
                        </AuthorizeView>*@
                    </GridColumns>
                </TelerikGrid>
            </div>
        </section>

        <!-- Popup Windows => Confirm Document Deletion -->
        <section>
            <ConfirmDialog @bind-IsVisible="IsVisibleDeleteCostConfirmDialog"
                           Title="تایید حذف هزینه"
                           Text="این هزینه به طور کامل حذف خواهد شد. آیا از حذف آن اطمینان دارید؟"
                           OnConfirm="() => DeleteCost(DeletingCostId)" />
        </section>
    </div>

    <!-- Popup Windows : Select Obligation Type -->
    <article>
        <TelerikWindow Class="popup-window-custom-wrapper" Width="100%" Height="100%" Centered="true" Visible="IsVisibleSelectObligationWindow">
            <WindowContent>

                <div class="popup-window-content versioning-window">

                    <div class="app-versioning-container" style="position: relative">

                        <img class="close-button" src="@IconUrls.CloseCircle" @onclick="() => IsVisibleSelectObligationWindow = false"
                             style="width: 30px;left: -10px;float: left;position: absolute;top: 7px;cursor: pointer;" />

                        <div class="col-4 popup-window-content-card" style="width:100%">
                            @{
                                <main class="insurance-page">
                                    <article>

                                        <section>
                                            <div class="row">

                                                <div class="col col-md-12">
                                                    <section class="policy-notes-box policy-prices-box" style="     margin: 15px 20px 0 20px;   padding: 0;
                                                                                                                           border: none;">

                                                        @if (ActivePolicyObligations.Count > 0)
                                                        {
                                                            <table class="styled-table" style="border: 1px solid #ac152b;">
                                                                <thead>
                                                                    <tr>
                                                                        <th>ردیف</th>
                                                                        <th>نوع تعهدات</th>
                                                                        <th>
                                                                            توضیحات
                                                                        </th>
                                                                        <th></th>
                                                                    </tr>
                                                                </thead>
                                                                <tbody>
                                                                    @foreach (var po in ActivePolicyObligations)
                                                                    {
                                                                        <tr>
                                                                            <td>@po.ObligationCode.ToPersianNumbers()</td>
                                                                            <td>@po.ObligationTitle</td>
                                                                            <td>
                                                                                @po.ObligationDescription
                                                                            </td>
                                                                            <td>
                                                                                <button type="submit" class="primary-button" @onclick="() => OnSelectObligation(po.Id)">انتخاب</button>
                                                                            </td>
                                                                        </tr>
                                                                    }
                                                                </tbody>
                                                            </table>
                                                        }
                                                    </section>
                                                </div>

                                            </div>
                                        </section>
                                    </article>

                                </main>
                            }
                        </div>

                    </div>
                </div>

            </WindowContent>
        </TelerikWindow>
    </article>
</article>
