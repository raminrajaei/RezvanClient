@page "/class/all"
@using Microsoft.AspNetCore.Components
@using ATA.HR.Client.Web.APIs.Models.Response
@using ATABit.Helper.Utils
@using ATA.HR.Client.Web.APIs.Enums
@inherits BitPageBase

<PageTitle>
    @PageTitles.ClassPage.Title
</PageTitle>

<TelerikLoaderContainer Visible="@IsLoading" Text="" />

<article>

    <div class="classes-page">
        <!-- personnel-page Page Heading Title -->
        <section>
            <div class="page-header-wrapper">
                <TopBar PageName="@PageTitles.ClassPage.Title" PageDescription="برای اضافه کردن، ویرایش و مشاهده‌ی کلاس‌های موسسه از این قسمت استفاده نمایید" />
                <div>
                        <RadzenSelectBar Data="@ClassTypesSource"
                                         TValue="int?"
                                         @bind-Value=@ClassTypeFilter
                                         Change="@(ApplyFilters)"
                                         TextProperty="Text"
                                         ValueProperty="ValueInt" />
                </div>
                <RadzenButton Disabled="PageOperationType == OperationType.Custom1" class="primary-button add-root-class-button" Text="ایجاد کلاس اصلی" Click="AddRootClass" />
            </div>
        </section>

        <!-- TreeView Section -->
        <section class="class-section">

            <TelerikSplitter Class="telerik-custom-split-wrapper">
                <SplitterPanes>
                    <SplitterPane Size="60%" Collapsible="true" Min="500px" Max="70%">

                        <!-- classes TreeView -->
                        <div class="treeview-custom-wrapper">
                            <TelerikTreeView Data="@Classes"
                                             SelectionMode="@TreeViewSelectionMode.Single"
                            @bind-ExpandedItems="@ExpandedItems"
                            @bind-SelectedItems="@SelectedItems">
                                <TreeViewBindings>
                                    <TreeViewBinding TextField="@(nameof(ClassRoomDto.Title))" ParentIdField="@(nameof(ClassRoomDto.ParentId))">
                                        <ItemTemplate>
                                            @{
                                                var classRoom = (ClassRoomDto)context;

                                                <div class=@($"class-box {(classRoom.IsSelected ? "selected" : "")}") @onclick="@(() => OnSelectClass(classRoom))">

                                                    <div class="folder-name-box">

                                                        <div class="item-icon"></div>

                                                        <span class="class-name">@(classRoom.Title)</span>

                                                        @if (classRoom.HasChildren)
                                                        {
                                                            <span class=@($"child-count {(classRoom.IsSelected ? "selected" : "")}")>@(classRoom.ChildCount)</span>
                                                        }
                                                    </div>

                                                </div>

                                                @if (classRoom.IsSelected)
                                                {
                                                    <div class="item-actions">
                                                        <img src="@IconUrls.AddCircle" class="add" @onclick="@(() => OnAddClass(classRoom))" />

                                                        @if (classRoom.HasChildren is false)
                                                        {
                                                            <img src="@IconUrls.TrashGray" class="remove" @onclick="@(() => OnDeleteClass(classRoom))" />
                                                        }
                                                    </div>
                                                }
                                            }
                                        </ItemTemplate>
                                    </TreeViewBinding>
                                </TreeViewBindings>
                            </TelerikTreeView>
                        </div>
                    </SplitterPane>

                    <SplitterPane Collapsible="true" Min="50px">

                        @if (PageOperationType == OperationType.Nothing)
                        {
                            <div class="flex-column classes-emptystate">
                                <img src="@ImageUrls.Pages.ClassEmptyState">
                                <div class="class-emptystate-title">
                                    کلاس‌های موسسه را سازماندهی نمایید
                                </div>
                                <div class="class-emptystate-subtitle">
                                    کلاس‌ها را برای ویرایش، افزودن و حذف از لیست انتخاب نمایید
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="form-custom-wrapper class-edit-form">

                                <div class="edit-form-title">
                                    @if (PageOperationType == OperationType.Custom1)
                                    {
                                        <span>ایجاد کردن کلاس اصلی</span>
                                    }
                                    else if (PageOperationType == OperationType.Add)
                                    {
                                        <div>ایجاد کلاس جدید</div>

                                        <div class="parent-class">کلاس پدر: <b>@(Classes.First(c => c.IsSelected).Title)</b></div>
                                    }
                                    else if (PageOperationType == OperationType.Edit)
                                    {
                                        <span>ویرایش کلاس انتخاب شده</span>
                                    }
                                </div>

                                <EditForm Model="Class" OnValidSubmit="OnClassSubmit">
                                    <DataAnnotationsValidator />

                                    <div class="form-section class-form">

                                        <div class="form-section-title">مشخصات کلاس</div>

                                        <!-- class Name Input -->
                                        <div class="form-item-wrapper">
                                            <label for="className">نام کلاس *</label>
                                            <div class="form-input-wrapper">
                                                <TelerikTextBox Id="className" @ref="_focusableClassNameRef" @bind-Value="@Class.Title" PlaceHolder="نام کلاس" />
                                            </div>
                                            <ValidationMessage For="() => Class.Title" />
                                        </div>
                                        @if (PageOperationType != OperationType.Edit)
                                        {
                                            <div class="form-item-wrapper class-type-item">
                                                <label for="className">نوع کلاس *</label>
                                                <div class="form-input-wrapper">
                                                    <RadzenDropDown AllowClear="false"
                                                                    TValue="int"
                                                                    Disabled="@(PageOperationType is OperationType.Add or OperationType.Edit)"
                                                                    AllowFiltering="true"
                                                                    Placeholder="انتخاب کنید"
                                                                    Data="@(EnumMapping.ToSelectListItems<ClassType>())"
                                                                    @bind-Value="@Class.ClassType"
                                                                    TextProperty="Text"
                                                                    ValueProperty="ValueInt" />
                                                </div>
                                                <ValidationMessage For="() => Class.ClassType" />
                                            </div>
                                        }

                                        <div class="submit-button">
                                            @if (IsSaving)
                                            {
                                                <button type="button" disable class="primary-button">در حال ذخیره</button>
                                            }
                                            else
                                            {
                                                <button type="submit" class="primary-button">ذخیره</button>
                                            }
                                        </div>

                                    </div>
                                </EditForm>
                            </div>
                        }

                    </SplitterPane>

                </SplitterPanes>
            </TelerikSplitter>

        </section>
    </div>
</article>
